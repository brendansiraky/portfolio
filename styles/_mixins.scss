@import './variables.scss';

// @include background-image(logo, png, 100px 100px, center, no-repeat);
@mixin background-image($file, $type, $size, $position, $repeat, $retina: false) {

    background-image: url($image-path + $file + '.' + $type);
    background-position: $position;
    background-repeat: $repeat;
    background-size: $size;

    @if ($retina == true) {
        @include hidpi(1.3) {
            background-image: url($image-path + $file + $image-suffix + '.' + $type);
        }
    }

}

// @include breakpoint(sm) {}
@mixin breakpoint($value) {

    @if $value == xs {
        @media (max-width: $xs) { @content; }
    }

    @if $value == sm {
        @media (max-width: $sm) { @content; }
    }

    @if $value == md {
        @media (max-width: $md) { @content; }
    }

    @if $value == lg {
        @media (max-width: $lg) { @content; }
    }

}

// @include flex(flex, row, wrap, flex-start, flex-start);
@mixin flex($display, $flex-direction, $flex-wrap, $justify-content, $align-items, $align-content: null) {
	@if $display == 'inline-flex' {
		display: inline-flex;
	} @else {
		display: flex;
	}
	flex-flow: $flex-direction $flex-wrap;
	justify-content: $justify-content;
	align-items: $align-items;
	align-content: $align-content;
}

// @include position($position: absolute, $top: 10px, $left: 10px);
@mixin position($position: null, $top: null, $right: null, $bottom: null, $left: null) {
    bottom: $bottom;
    left: $left;
    position: $position;
    right: $right;
    top: $top;
}

// @include column(2);
@mixin column($value) {
	width: calc(100% / (#{$grid-columns} / #{$value}));
}

// @include column-offset(2);
@mixin column-offset($value) {
	margin-left: calc(100% / (#{$grid-columns} / #{$value}));
}

// @include list-reset;
@mixin list-reset {
	list-style: none;
	margin: 0;
	padding: 0;
}